name: Build, publish, and deploy Docker image to EC2

on:
  push:
    branches:
      - dev
      - qa
      - stage
      - production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t frontendapp .

      - name: Tag Docker image
        run: |
          docker tag frontendapp:latest 654654282708.dkr.ecr.ap-southeast-1.amazonaws.com/frontendapp:${{ github.ref_name }}-latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push 654654282708.dkr.ecr.ap-southeast-1.amazonaws.com/frontendapp:${{ github.ref_name }}-latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            if [ "${{ github.ref_name }}" == "production" ]; then
              sh deploy-production.sh
            elif [ "${{ github.ref_name }}" == "stage" ]; then
              sh deploy-stage.sh
            elif [ "${{ github.ref_name }}" == "qa" ]; then
              sh deploy-qa.sh
            elif [ "${{ github.ref_name }}" == "dev" ]; then
              sh deploy-dev.sh
            fi 